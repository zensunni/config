set -g prefix C-a
unbind C-b
set -s escape-time 1
set -g base-index 1
set -g pane-base-index 1

# sends Ctrl-a to app inside tmux if used twice:
bind C-a send-prefix

# reload configuration shortcut:
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# better splitting windows shortcuts:
bind | split-window -h
bind - split-window -v

# mapping pane navigation to vim direction commands.
# NOTE: Mapping hjkl makes it unavailable to tmux buffer mode unless you use
# setw -g mode-keys vi, as done below
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# set vi mode so you can use hjkl and other vim-like controls in buffer mode (PREFIX+[)
setw -g mode-keys vi

# mapping pane resizing to vim direction commands with shift.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# handle the mouse
setw -g mode-mouse off
setw -g mode-mouse off

# extra mouse options
set -g mouse-select-pane off
set -g mouse-resize-pane off
set -g mouse-select-window off

# colors
set -g default-terminal "screen-256color"

# exit tmux dev session
bind X run "tmux kill-session -t dev"

### Theme ###################

# status bar
set -g status-fg black
set -g status-bg white

# window status text (ex: 1:vim* 2:bash 3:bash-)
setw -g window-status-fg black
setw -g window-status-bg white
setw -g window-status-attr none

# window status text for currently selected window
setw -g window-status-current-fg white 
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# pane border colors
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg white

set -g message-fg black
set -g message-bg yellow
set -g message-attr none

# Remap copy and paste keys ala Vim
# unmap [ to enter copy mode
## unbind [
## bind Escape copy-mode
# unmap p
## bind p paste-buffer
## bind -t vi-copy 'v' begin-selection
## bind -t vi-copy 'y' copy-selection

# remaping copy and paste from clipboard to tmux and back
# before doing so need this program
# git clone https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard.git
# cd tmux-MacOSX-pasteboard/
# make reattach-to-user-namespace
# sudo mv reattach-to-user-namespace /usr/local/bin
## bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
## bind C-v run "tmux set-buffer \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer"

### Status Bar ###############

# left side
set -g status-left-length 40
set -g status-left " Session: #S | "

# right side
set -g status-right "| %b %d | %I:%M %p "

# update interval (for time output & other things)
# default: 15 secs
#set -g status-interval 60

# window list position
set -g status-justify centre # left, right

# notify on activity
# NOTE: This is set in the tmux init script
#setw -g monitor-activity on
#set -g visual-activity off


### Mac Copy/Paste ###########

# set reattach-to-user-namespace only if we're on a mac
if-shell 'test `uname` == "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l bash"'

# if we're on linux...
#if-shell 'test "$(uname)" = "Darwin"'

### Custom scripts ###########

bind D source-file ~/.tmux/dev

set-option history-limit 5000

